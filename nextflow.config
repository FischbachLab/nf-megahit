includeConfig "$baseDir/conf/aws_batch.config"

manifest {
  name = 'Megahit'
  author = 'Xiandong Meng'
  homePage = 'https://github.com/voutcn/megahit'
  description = 'Metagenome assembly pipeline'
  mainScript = 'main.nf'
  version = '0.0.1'
  defaultBranch = 'main' //github branch name
}

process {
  maxRetries = 3
  executor = 'awsbatch'
  queue = "default-maf-pipelines"
  cleanup = true
  cache = false
  //container = '423543210473.dkr.ecr.us-west-2.amazonaws.com/fischbach_lab/
  errorStrategy = { task.exitStatus in [143,137,104,134,139] ? 'retry' : 'finish' }
}

docker.enabled = true

aws {
  region = "us-west-2"
}

//aws.batch.cliPath = '/home/ec2-user/miniconda3/bin/aws'

params{
  /*
 * Defines the pipeline inputs parameters (giving a default value for each for them)
 * Each of the following parameters can be specified as command line options
 */
 /* 	Initialization
  --------------------------------*/
  reads1 = ""
  reads2 = ""
  output_path = "s3://genomics-workflow-core/Pipeline_Results/Megahit/"
  //"s3://genomics-workflow-core/Pipeline_Results/Megahit/${params.output_prefix}"
  sampleRate = 1
  container = 'fischbachlab/nf-megahit:latest'
}

docker {
    enabled = true
}

profiles {
  //awsbatch { includeConfig 'conf/awsbatch.config' }
  //conda { process.conda = "$baseDir/environment.yml" }
  debug { process.beforeScript = 'echo $HOSTNAME' }
  docker { docker.enabled = true }
  //singularity { singularity.enabled = true }
  //test { includeConfig 'conf/test.config' }
}


timeline {
  enabled = false
  overwrite = true
  file = "$params.output_path/execution_reports/timeline.html"
}

report {
  enabled = false
  overwrite = true
  file = "$params.output_path/execution_reports/report.html"
}

dag {
    enabled = false
    overwrite = true
    file = "$params.output_path/execution_reports/pipeline_dag.html"
}
